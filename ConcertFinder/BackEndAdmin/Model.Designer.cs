//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ConcertFinderModel", "FK_EVENT_LOCATION", "LOCATION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BackEndAdmin.LOCATION), "EVENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BackEndAdmin.EVENT))]
[assembly: EdmRelationshipAttribute("ConcertFinderModel", "FK_EVENT_USER", "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BackEndAdmin.USER), "EVENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BackEndAdmin.EVENT))]
[assembly: EdmRelationshipAttribute("ConcertFinderModel", "HAS_NOTIFICATION", "EVENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BackEndAdmin.EVENT), "NOTIFICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BackEndAdmin.NOTIFICATION))]
[assembly: EdmRelationshipAttribute("ConcertFinderModel", "HAS_TAGS", "EVENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BackEndAdmin.EVENT), "TAG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BackEndAdmin.TAG))]
[assembly: EdmRelationshipAttribute("ConcertFinderModel", "NOTIFIED", "NOTIFICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BackEndAdmin.NOTIFICATION), "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BackEndAdmin.USER))]
[assembly: EdmRelationshipAttribute("ConcertFinderModel", "PREFERS", "TAG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BackEndAdmin.TAG), "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BackEndAdmin.USER))]

#endregion

namespace BackEndAdmin
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ConcertFinderEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ConcertFinderEntities object using the connection string found in the 'ConcertFinderEntities' section of the application configuration file.
        /// </summary>
        public ConcertFinderEntities() : base("name=ConcertFinderEntities", "ConcertFinderEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConcertFinderEntities object.
        /// </summary>
        public ConcertFinderEntities(string connectionString) : base(connectionString, "ConcertFinderEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConcertFinderEntities object.
        /// </summary>
        public ConcertFinderEntities(EntityConnection connection) : base(connection, "ConcertFinderEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EVENT> EVENT
        {
            get
            {
                if ((_EVENT == null))
                {
                    _EVENT = base.CreateObjectSet<EVENT>("EVENT");
                }
                return _EVENT;
            }
        }
        private ObjectSet<EVENT> _EVENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LOCATION> LOCATION
        {
            get
            {
                if ((_LOCATION == null))
                {
                    _LOCATION = base.CreateObjectSet<LOCATION>("LOCATION");
                }
                return _LOCATION;
            }
        }
        private ObjectSet<LOCATION> _LOCATION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NOTIFICATION> NOTIFICATION
        {
            get
            {
                if ((_NOTIFICATION == null))
                {
                    _NOTIFICATION = base.CreateObjectSet<NOTIFICATION>("NOTIFICATION");
                }
                return _NOTIFICATION;
            }
        }
        private ObjectSet<NOTIFICATION> _NOTIFICATION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TAG> TAG
        {
            get
            {
                if ((_TAG == null))
                {
                    _TAG = base.CreateObjectSet<TAG>("TAG");
                }
                return _TAG;
            }
        }
        private ObjectSet<TAG> _TAG;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<USER> USER
        {
            get
            {
                if ((_USER == null))
                {
                    _USER = base.CreateObjectSet<USER>("USER");
                }
                return _USER;
            }
        }
        private ObjectSet<USER> _USER;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EVENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEVENT(EVENT eVENT)
        {
            base.AddObject("EVENT", eVENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LOCATION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLOCATION(LOCATION lOCATION)
        {
            base.AddObject("LOCATION", lOCATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NOTIFICATION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNOTIFICATION(NOTIFICATION nOTIFICATION)
        {
            base.AddObject("NOTIFICATION", nOTIFICATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TAG EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTAG(TAG tAG)
        {
            base.AddObject("TAG", tAG);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the USER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUSER(USER uSER)
        {
            base.AddObject("USER", uSER);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConcertFinderModel", Name="EVENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EVENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EVENT object.
        /// </summary>
        /// <param name="eVENT_ID">Initial value of the EVENT_ID property.</param>
        /// <param name="eVENT_DATEDEBUT">Initial value of the EVENT_DATEDEBUT property.</param>
        /// <param name="eVENT_DESCRIPTION">Initial value of the EVENT_DESCRIPTION property.</param>
        /// <param name="eVENT_TITRE">Initial value of the EVENT_TITRE property.</param>
        /// <param name="eVENT_TYPE">Initial value of the EVENT_TYPE property.</param>
        public static EVENT CreateEVENT(global::System.Int64 eVENT_ID, global::System.DateTime eVENT_DATEDEBUT, global::System.String eVENT_DESCRIPTION, global::System.String eVENT_TITRE, global::System.String eVENT_TYPE)
        {
            EVENT eVENT = new EVENT();
            eVENT.EVENT_ID = eVENT_ID;
            eVENT.EVENT_DATEDEBUT = eVENT_DATEDEBUT;
            eVENT.EVENT_DESCRIPTION = eVENT_DESCRIPTION;
            eVENT.EVENT_TITRE = eVENT_TITRE;
            eVENT.EVENT_TYPE = eVENT_TYPE;
            return eVENT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EVENT_ID
        {
            get
            {
                return _EVENT_ID;
            }
            set
            {
                if (_EVENT_ID != value)
                {
                    OnEVENT_IDChanging(value);
                    ReportPropertyChanging("EVENT_ID");
                    _EVENT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EVENT_ID");
                    OnEVENT_IDChanged();
                }
            }
        }
        private global::System.Int64 _EVENT_ID;
        partial void OnEVENT_IDChanging(global::System.Int64 value);
        partial void OnEVENT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EVENT_DATEDEBUT
        {
            get
            {
                return _EVENT_DATEDEBUT;
            }
            set
            {
                OnEVENT_DATEDEBUTChanging(value);
                ReportPropertyChanging("EVENT_DATEDEBUT");
                _EVENT_DATEDEBUT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EVENT_DATEDEBUT");
                OnEVENT_DATEDEBUTChanged();
            }
        }
        private global::System.DateTime _EVENT_DATEDEBUT;
        partial void OnEVENT_DATEDEBUTChanging(global::System.DateTime value);
        partial void OnEVENT_DATEDEBUTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EVENT_DATEFIN
        {
            get
            {
                return _EVENT_DATEFIN;
            }
            set
            {
                OnEVENT_DATEFINChanging(value);
                ReportPropertyChanging("EVENT_DATEFIN");
                _EVENT_DATEFIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EVENT_DATEFIN");
                OnEVENT_DATEFINChanged();
            }
        }
        private Nullable<global::System.DateTime> _EVENT_DATEFIN;
        partial void OnEVENT_DATEFINChanging(Nullable<global::System.DateTime> value);
        partial void OnEVENT_DATEFINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EVENT_DESCRIPTION
        {
            get
            {
                return _EVENT_DESCRIPTION;
            }
            set
            {
                OnEVENT_DESCRIPTIONChanging(value);
                ReportPropertyChanging("EVENT_DESCRIPTION");
                _EVENT_DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EVENT_DESCRIPTION");
                OnEVENT_DESCRIPTIONChanged();
            }
        }
        private global::System.String _EVENT_DESCRIPTION;
        partial void OnEVENT_DESCRIPTIONChanging(global::System.String value);
        partial void OnEVENT_DESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EVENT_TITRE
        {
            get
            {
                return _EVENT_TITRE;
            }
            set
            {
                OnEVENT_TITREChanging(value);
                ReportPropertyChanging("EVENT_TITRE");
                _EVENT_TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EVENT_TITRE");
                OnEVENT_TITREChanged();
            }
        }
        private global::System.String _EVENT_TITRE;
        partial void OnEVENT_TITREChanging(global::System.String value);
        partial void OnEVENT_TITREChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EVENT_TYPE
        {
            get
            {
                return _EVENT_TYPE;
            }
            set
            {
                OnEVENT_TYPEChanging(value);
                ReportPropertyChanging("EVENT_TYPE");
                _EVENT_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EVENT_TYPE");
                OnEVENT_TYPEChanged();
            }
        }
        private global::System.String _EVENT_TYPE;
        partial void OnEVENT_TYPEChanging(global::System.String value);
        partial void OnEVENT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EVENT_IMG_PATH
        {
            get
            {
                return _EVENT_IMG_PATH;
            }
            set
            {
                OnEVENT_IMG_PATHChanging(value);
                ReportPropertyChanging("EVENT_IMG_PATH");
                _EVENT_IMG_PATH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EVENT_IMG_PATH");
                OnEVENT_IMG_PATHChanged();
            }
        }
        private global::System.String _EVENT_IMG_PATH;
        partial void OnEVENT_IMG_PATHChanging(global::System.String value);
        partial void OnEVENT_IMG_PATHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> EVENT_VALIDE
        {
            get
            {
                return _EVENT_VALIDE;
            }
            set
            {
                OnEVENT_VALIDEChanging(value);
                ReportPropertyChanging("EVENT_VALIDE");
                _EVENT_VALIDE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EVENT_VALIDE");
                OnEVENT_VALIDEChanged();
            }
        }
        private Nullable<global::System.Boolean> _EVENT_VALIDE;
        partial void OnEVENT_VALIDEChanging(Nullable<global::System.Boolean> value);
        partial void OnEVENT_VALIDEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EVENT_EMAIL
        {
            get
            {
                return _EVENT_EMAIL;
            }
            set
            {
                OnEVENT_EMAILChanging(value);
                ReportPropertyChanging("EVENT_EMAIL");
                _EVENT_EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EVENT_EMAIL");
                OnEVENT_EMAILChanged();
            }
        }
        private global::System.String _EVENT_EMAIL;
        partial void OnEVENT_EMAILChanging(global::System.String value);
        partial void OnEVENT_EMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EVENT_TEL
        {
            get
            {
                return _EVENT_TEL;
            }
            set
            {
                OnEVENT_TELChanging(value);
                ReportPropertyChanging("EVENT_TEL");
                _EVENT_TEL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EVENT_TEL");
                OnEVENT_TELChanged();
            }
        }
        private global::System.String _EVENT_TEL;
        partial void OnEVENT_TELChanging(global::System.String value);
        partial void OnEVENT_TELChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EVENT_SITE
        {
            get
            {
                return _EVENT_SITE;
            }
            set
            {
                OnEVENT_SITEChanging(value);
                ReportPropertyChanging("EVENT_SITE");
                _EVENT_SITE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EVENT_SITE");
                OnEVENT_SITEChanged();
            }
        }
        private global::System.String _EVENT_SITE;
        partial void OnEVENT_SITEChanging(global::System.String value);
        partial void OnEVENT_SITEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "FK_EVENT_LOCATION", "LOCATION")]
        public LOCATION LOCATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LOCATION>("ConcertFinderModel.FK_EVENT_LOCATION", "LOCATION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LOCATION>("ConcertFinderModel.FK_EVENT_LOCATION", "LOCATION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LOCATION> LOCATIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LOCATION>("ConcertFinderModel.FK_EVENT_LOCATION", "LOCATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LOCATION>("ConcertFinderModel.FK_EVENT_LOCATION", "LOCATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "FK_EVENT_USER", "USER")]
        public USER USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("ConcertFinderModel.FK_EVENT_USER", "USER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("ConcertFinderModel.FK_EVENT_USER", "USER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<USER> USERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("ConcertFinderModel.FK_EVENT_USER", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<USER>("ConcertFinderModel.FK_EVENT_USER", "USER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "HAS_NOTIFICATION", "NOTIFICATION")]
        public EntityCollection<NOTIFICATION> NOTIFICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NOTIFICATION>("ConcertFinderModel.HAS_NOTIFICATION", "NOTIFICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NOTIFICATION>("ConcertFinderModel.HAS_NOTIFICATION", "NOTIFICATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "HAS_TAGS", "TAG")]
        public EntityCollection<TAG> TAG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TAG>("ConcertFinderModel.HAS_TAGS", "TAG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TAG>("ConcertFinderModel.HAS_TAGS", "TAG", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConcertFinderModel", Name="LOCATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LOCATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LOCATION object.
        /// </summary>
        /// <param name="lOCATION_ID">Initial value of the LOCATION_ID property.</param>
        /// <param name="lOCATION_NAME">Initial value of the LOCATION_NAME property.</param>
        /// <param name="lOCATION_VILLE">Initial value of the LOCATION_VILLE property.</param>
        /// <param name="lOCATION_PAYS">Initial value of the LOCATION_PAYS property.</param>
        /// <param name="lOCATION_RUE">Initial value of the LOCATION_RUE property.</param>
        /// <param name="lOCATION_CP">Initial value of the LOCATION_CP property.</param>
        public static LOCATION CreateLOCATION(global::System.Int64 lOCATION_ID, global::System.String lOCATION_NAME, global::System.String lOCATION_VILLE, global::System.String lOCATION_PAYS, global::System.String lOCATION_RUE, global::System.String lOCATION_CP)
        {
            LOCATION lOCATION = new LOCATION();
            lOCATION.LOCATION_ID = lOCATION_ID;
            lOCATION.LOCATION_NAME = lOCATION_NAME;
            lOCATION.LOCATION_VILLE = lOCATION_VILLE;
            lOCATION.LOCATION_PAYS = lOCATION_PAYS;
            lOCATION.LOCATION_RUE = lOCATION_RUE;
            lOCATION.LOCATION_CP = lOCATION_CP;
            return lOCATION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LOCATION_ID
        {
            get
            {
                return _LOCATION_ID;
            }
            set
            {
                if (_LOCATION_ID != value)
                {
                    OnLOCATION_IDChanging(value);
                    ReportPropertyChanging("LOCATION_ID");
                    _LOCATION_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LOCATION_ID");
                    OnLOCATION_IDChanged();
                }
            }
        }
        private global::System.Int64 _LOCATION_ID;
        partial void OnLOCATION_IDChanging(global::System.Int64 value);
        partial void OnLOCATION_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LOCATION_NAME
        {
            get
            {
                return _LOCATION_NAME;
            }
            set
            {
                OnLOCATION_NAMEChanging(value);
                ReportPropertyChanging("LOCATION_NAME");
                _LOCATION_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LOCATION_NAME");
                OnLOCATION_NAMEChanged();
            }
        }
        private global::System.String _LOCATION_NAME;
        partial void OnLOCATION_NAMEChanging(global::System.String value);
        partial void OnLOCATION_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LOCATION_VILLE
        {
            get
            {
                return _LOCATION_VILLE;
            }
            set
            {
                OnLOCATION_VILLEChanging(value);
                ReportPropertyChanging("LOCATION_VILLE");
                _LOCATION_VILLE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LOCATION_VILLE");
                OnLOCATION_VILLEChanged();
            }
        }
        private global::System.String _LOCATION_VILLE;
        partial void OnLOCATION_VILLEChanging(global::System.String value);
        partial void OnLOCATION_VILLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LOCATION_PAYS
        {
            get
            {
                return _LOCATION_PAYS;
            }
            set
            {
                OnLOCATION_PAYSChanging(value);
                ReportPropertyChanging("LOCATION_PAYS");
                _LOCATION_PAYS = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LOCATION_PAYS");
                OnLOCATION_PAYSChanged();
            }
        }
        private global::System.String _LOCATION_PAYS;
        partial void OnLOCATION_PAYSChanging(global::System.String value);
        partial void OnLOCATION_PAYSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LOCATION_RUE
        {
            get
            {
                return _LOCATION_RUE;
            }
            set
            {
                OnLOCATION_RUEChanging(value);
                ReportPropertyChanging("LOCATION_RUE");
                _LOCATION_RUE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LOCATION_RUE");
                OnLOCATION_RUEChanged();
            }
        }
        private global::System.String _LOCATION_RUE;
        partial void OnLOCATION_RUEChanging(global::System.String value);
        partial void OnLOCATION_RUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LOCATION_CP
        {
            get
            {
                return _LOCATION_CP;
            }
            set
            {
                OnLOCATION_CPChanging(value);
                ReportPropertyChanging("LOCATION_CP");
                _LOCATION_CP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LOCATION_CP");
                OnLOCATION_CPChanged();
            }
        }
        private global::System.String _LOCATION_CP;
        partial void OnLOCATION_CPChanging(global::System.String value);
        partial void OnLOCATION_CPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LOCATION_LATTITUDE
        {
            get
            {
                return _LOCATION_LATTITUDE;
            }
            set
            {
                OnLOCATION_LATTITUDEChanging(value);
                ReportPropertyChanging("LOCATION_LATTITUDE");
                _LOCATION_LATTITUDE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOCATION_LATTITUDE");
                OnLOCATION_LATTITUDEChanged();
            }
        }
        private Nullable<global::System.Double> _LOCATION_LATTITUDE;
        partial void OnLOCATION_LATTITUDEChanging(Nullable<global::System.Double> value);
        partial void OnLOCATION_LATTITUDEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LOCATION_LONGITUDE
        {
            get
            {
                return _LOCATION_LONGITUDE;
            }
            set
            {
                OnLOCATION_LONGITUDEChanging(value);
                ReportPropertyChanging("LOCATION_LONGITUDE");
                _LOCATION_LONGITUDE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOCATION_LONGITUDE");
                OnLOCATION_LONGITUDEChanged();
            }
        }
        private Nullable<global::System.Double> _LOCATION_LONGITUDE;
        partial void OnLOCATION_LONGITUDEChanging(Nullable<global::System.Double> value);
        partial void OnLOCATION_LONGITUDEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "FK_EVENT_LOCATION", "EVENT")]
        public EntityCollection<EVENT> EVENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EVENT>("ConcertFinderModel.FK_EVENT_LOCATION", "EVENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EVENT>("ConcertFinderModel.FK_EVENT_LOCATION", "EVENT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConcertFinderModel", Name="NOTIFICATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NOTIFICATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NOTIFICATION object.
        /// </summary>
        /// <param name="nOTIF_ID">Initial value of the NOTIF_ID property.</param>
        /// <param name="nOTIF_TITRE">Initial value of the NOTIF_TITRE property.</param>
        /// <param name="nOTIF_DATE">Initial value of the NOTIF_DATE property.</param>
        /// <param name="nOTIF_MESSAGE">Initial value of the NOTIF_MESSAGE property.</param>
        public static NOTIFICATION CreateNOTIFICATION(global::System.Int64 nOTIF_ID, global::System.String nOTIF_TITRE, global::System.DateTime nOTIF_DATE, global::System.String nOTIF_MESSAGE)
        {
            NOTIFICATION nOTIFICATION = new NOTIFICATION();
            nOTIFICATION.NOTIF_ID = nOTIF_ID;
            nOTIFICATION.NOTIF_TITRE = nOTIF_TITRE;
            nOTIFICATION.NOTIF_DATE = nOTIF_DATE;
            nOTIFICATION.NOTIF_MESSAGE = nOTIF_MESSAGE;
            return nOTIFICATION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NOTIF_ID
        {
            get
            {
                return _NOTIF_ID;
            }
            set
            {
                if (_NOTIF_ID != value)
                {
                    OnNOTIF_IDChanging(value);
                    ReportPropertyChanging("NOTIF_ID");
                    _NOTIF_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NOTIF_ID");
                    OnNOTIF_IDChanged();
                }
            }
        }
        private global::System.Int64 _NOTIF_ID;
        partial void OnNOTIF_IDChanging(global::System.Int64 value);
        partial void OnNOTIF_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOTIF_TITRE
        {
            get
            {
                return _NOTIF_TITRE;
            }
            set
            {
                OnNOTIF_TITREChanging(value);
                ReportPropertyChanging("NOTIF_TITRE");
                _NOTIF_TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOTIF_TITRE");
                OnNOTIF_TITREChanged();
            }
        }
        private global::System.String _NOTIF_TITRE;
        partial void OnNOTIF_TITREChanging(global::System.String value);
        partial void OnNOTIF_TITREChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime NOTIF_DATE
        {
            get
            {
                return _NOTIF_DATE;
            }
            set
            {
                OnNOTIF_DATEChanging(value);
                ReportPropertyChanging("NOTIF_DATE");
                _NOTIF_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NOTIF_DATE");
                OnNOTIF_DATEChanged();
            }
        }
        private global::System.DateTime _NOTIF_DATE;
        partial void OnNOTIF_DATEChanging(global::System.DateTime value);
        partial void OnNOTIF_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOTIF_MESSAGE
        {
            get
            {
                return _NOTIF_MESSAGE;
            }
            set
            {
                OnNOTIF_MESSAGEChanging(value);
                ReportPropertyChanging("NOTIF_MESSAGE");
                _NOTIF_MESSAGE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOTIF_MESSAGE");
                OnNOTIF_MESSAGEChanged();
            }
        }
        private global::System.String _NOTIF_MESSAGE;
        partial void OnNOTIF_MESSAGEChanging(global::System.String value);
        partial void OnNOTIF_MESSAGEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "HAS_NOTIFICATION", "EVENT")]
        public EntityCollection<EVENT> EVENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EVENT>("ConcertFinderModel.HAS_NOTIFICATION", "EVENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EVENT>("ConcertFinderModel.HAS_NOTIFICATION", "EVENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "NOTIFIED", "USER")]
        public EntityCollection<USER> USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USER>("ConcertFinderModel.NOTIFIED", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USER>("ConcertFinderModel.NOTIFIED", "USER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConcertFinderModel", Name="TAG")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TAG : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TAG object.
        /// </summary>
        /// <param name="tAG_ID">Initial value of the TAG_ID property.</param>
        /// <param name="tAG_CONTENT">Initial value of the TAG_CONTENT property.</param>
        public static TAG CreateTAG(global::System.Int64 tAG_ID, global::System.String tAG_CONTENT)
        {
            TAG tAG = new TAG();
            tAG.TAG_ID = tAG_ID;
            tAG.TAG_CONTENT = tAG_CONTENT;
            return tAG;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TAG_ID
        {
            get
            {
                return _TAG_ID;
            }
            set
            {
                if (_TAG_ID != value)
                {
                    OnTAG_IDChanging(value);
                    ReportPropertyChanging("TAG_ID");
                    _TAG_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TAG_ID");
                    OnTAG_IDChanged();
                }
            }
        }
        private global::System.Int64 _TAG_ID;
        partial void OnTAG_IDChanging(global::System.Int64 value);
        partial void OnTAG_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TAG_CONTENT
        {
            get
            {
                return _TAG_CONTENT;
            }
            set
            {
                OnTAG_CONTENTChanging(value);
                ReportPropertyChanging("TAG_CONTENT");
                _TAG_CONTENT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TAG_CONTENT");
                OnTAG_CONTENTChanged();
            }
        }
        private global::System.String _TAG_CONTENT;
        partial void OnTAG_CONTENTChanging(global::System.String value);
        partial void OnTAG_CONTENTChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "HAS_TAGS", "EVENT")]
        public EntityCollection<EVENT> EVENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EVENT>("ConcertFinderModel.HAS_TAGS", "EVENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EVENT>("ConcertFinderModel.HAS_TAGS", "EVENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "PREFERS", "USER")]
        public EntityCollection<USER> USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USER>("ConcertFinderModel.PREFERS", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USER>("ConcertFinderModel.PREFERS", "USER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConcertFinderModel", Name="USER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new USER object.
        /// </summary>
        /// <param name="uSER_ID">Initial value of the USER_ID property.</param>
        /// <param name="uSER_NAME">Initial value of the USER_NAME property.</param>
        /// <param name="uSER_FIRSTNAME">Initial value of the USER_FIRSTNAME property.</param>
        /// <param name="uSER_MAIL">Initial value of the USER_MAIL property.</param>
        /// <param name="uSER_LOGIN">Initial value of the USER_LOGIN property.</param>
        /// <param name="uSER_PASSWORD">Initial value of the USER_PASSWORD property.</param>
        /// <param name="uSER_ROLE">Initial value of the USER_ROLE property.</param>
        public static USER CreateUSER(global::System.Int64 uSER_ID, global::System.String uSER_NAME, global::System.String uSER_FIRSTNAME, global::System.String uSER_MAIL, global::System.String uSER_LOGIN, global::System.String uSER_PASSWORD, global::System.String uSER_ROLE)
        {
            USER uSER = new USER();
            uSER.USER_ID = uSER_ID;
            uSER.USER_NAME = uSER_NAME;
            uSER.USER_FIRSTNAME = uSER_FIRSTNAME;
            uSER.USER_MAIL = uSER_MAIL;
            uSER.USER_LOGIN = uSER_LOGIN;
            uSER.USER_PASSWORD = uSER_PASSWORD;
            uSER.USER_ROLE = uSER_ROLE;
            return uSER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 USER_ID
        {
            get
            {
                return _USER_ID;
            }
            set
            {
                if (_USER_ID != value)
                {
                    OnUSER_IDChanging(value);
                    ReportPropertyChanging("USER_ID");
                    _USER_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("USER_ID");
                    OnUSER_IDChanged();
                }
            }
        }
        private global::System.Int64 _USER_ID;
        partial void OnUSER_IDChanging(global::System.Int64 value);
        partial void OnUSER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String USER_NAME
        {
            get
            {
                return _USER_NAME;
            }
            set
            {
                OnUSER_NAMEChanging(value);
                ReportPropertyChanging("USER_NAME");
                _USER_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("USER_NAME");
                OnUSER_NAMEChanged();
            }
        }
        private global::System.String _USER_NAME;
        partial void OnUSER_NAMEChanging(global::System.String value);
        partial void OnUSER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String USER_FIRSTNAME
        {
            get
            {
                return _USER_FIRSTNAME;
            }
            set
            {
                OnUSER_FIRSTNAMEChanging(value);
                ReportPropertyChanging("USER_FIRSTNAME");
                _USER_FIRSTNAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("USER_FIRSTNAME");
                OnUSER_FIRSTNAMEChanged();
            }
        }
        private global::System.String _USER_FIRSTNAME;
        partial void OnUSER_FIRSTNAMEChanging(global::System.String value);
        partial void OnUSER_FIRSTNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String USER_MAIL
        {
            get
            {
                return _USER_MAIL;
            }
            set
            {
                OnUSER_MAILChanging(value);
                ReportPropertyChanging("USER_MAIL");
                _USER_MAIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("USER_MAIL");
                OnUSER_MAILChanged();
            }
        }
        private global::System.String _USER_MAIL;
        partial void OnUSER_MAILChanging(global::System.String value);
        partial void OnUSER_MAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String USER_LOGIN
        {
            get
            {
                return _USER_LOGIN;
            }
            set
            {
                OnUSER_LOGINChanging(value);
                ReportPropertyChanging("USER_LOGIN");
                _USER_LOGIN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("USER_LOGIN");
                OnUSER_LOGINChanged();
            }
        }
        private global::System.String _USER_LOGIN;
        partial void OnUSER_LOGINChanging(global::System.String value);
        partial void OnUSER_LOGINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String USER_PASSWORD
        {
            get
            {
                return _USER_PASSWORD;
            }
            set
            {
                OnUSER_PASSWORDChanging(value);
                ReportPropertyChanging("USER_PASSWORD");
                _USER_PASSWORD = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("USER_PASSWORD");
                OnUSER_PASSWORDChanged();
            }
        }
        private global::System.String _USER_PASSWORD;
        partial void OnUSER_PASSWORDChanging(global::System.String value);
        partial void OnUSER_PASSWORDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String USER_ROLE
        {
            get
            {
                return _USER_ROLE;
            }
            set
            {
                OnUSER_ROLEChanging(value);
                ReportPropertyChanging("USER_ROLE");
                _USER_ROLE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("USER_ROLE");
                OnUSER_ROLEChanged();
            }
        }
        private global::System.String _USER_ROLE;
        partial void OnUSER_ROLEChanging(global::System.String value);
        partial void OnUSER_ROLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String USER_VILLE
        {
            get
            {
                return _USER_VILLE;
            }
            set
            {
                OnUSER_VILLEChanging(value);
                ReportPropertyChanging("USER_VILLE");
                _USER_VILLE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("USER_VILLE");
                OnUSER_VILLEChanged();
            }
        }
        private global::System.String _USER_VILLE;
        partial void OnUSER_VILLEChanging(global::System.String value);
        partial void OnUSER_VILLEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "FK_EVENT_USER", "EVENT")]
        public EntityCollection<EVENT> EVENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EVENT>("ConcertFinderModel.FK_EVENT_USER", "EVENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EVENT>("ConcertFinderModel.FK_EVENT_USER", "EVENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "NOTIFIED", "NOTIFICATION")]
        public EntityCollection<NOTIFICATION> NOTIFICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NOTIFICATION>("ConcertFinderModel.NOTIFIED", "NOTIFICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NOTIFICATION>("ConcertFinderModel.NOTIFIED", "NOTIFICATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConcertFinderModel", "PREFERS", "TAG")]
        public EntityCollection<TAG> TAG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TAG>("ConcertFinderModel.PREFERS", "TAG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TAG>("ConcertFinderModel.PREFERS", "TAG", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
