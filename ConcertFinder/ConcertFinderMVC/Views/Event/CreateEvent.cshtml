@model ConcertFinderMVC.Models.FormEventModels

@section Header
{
    <link href="@Url.Content("~/Content/Formulaire.css")" rel="Stylesheet" type="text/css" />
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBm8CQjlFqdYRoa3Am16rtSsAiIpdhL_nw&sensor=false"></script>
    <script src="@Url.Content("~/Scripts/datetimepicker.js")" type="text/javascript"></script>
}
<div class="main">
    <div class="section_title">Creation d'evenement</div>
@using (Html.BeginForm("CreateEvent", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(x => x.Latitude);
    @Html.HiddenFor(x => x.Longitude);
        
    <div id="event">                                                             
            @Html.LabelFor(m => m.Title)
       
       
            @Html.TextBoxFor(m => m.Title)
            @Html.ValidationMessageFor(m => m.Title)
      
    
       
            @Html.LabelFor(m => m.Type)
       
            @Html.DropDownListFor(x => x.Type, Model.Types)
      
            @Html.LabelFor(m => m.StartDate)
       
            @Html.TextBoxFor(m => m.StartDate, new { id = "startDate" })
            @Html.ValidationMessageFor(m => m.StartDate)
       
            @Html.LabelFor(m => m.EndDate)
       
            @Html.TextBoxFor(m => m.EndDate, new { id = "endDate" })
            @Html.ValidationMessageFor(m => m.EndDate)
       
            @Html.LabelFor(m => m.Description)
        
            @Html.TextAreaFor(m => m.Description)
            @Html.ValidationMessageFor(m => m.Description)
        
            @Html.LabelFor(m => m.Image)
       
            <input type="file" id="FileImage" name="FileImage" />
       
            @Html.LabelFor(m => m.Tags)
        
            @Html.TextBoxFor(m => m.Tags)
            @Html.ValidationMessageFor(m => m.Tags)
    </div>
    <div id="localite">
       
            @Html.LabelFor(m => m.Country)
      
            @Html.TextBoxFor(m => m.Country, new { id = "country" })
            @Html.ValidationMessageFor(m => m.Country)
        
            @Html.LabelFor(m => m.City)
      
            @Html.TextBoxFor(m => m.City, new { id = "city" })
            @Html.ValidationMessageFor(m => m.City)
       
            @Html.LabelFor(m => m.CodePostal)
        
            @Html.TextBoxFor(m => m.CodePostal, new { id = "code_postal" })
            @Html.ValidationMessageFor(m => m.CodePostal)
       
            @Html.LabelFor(m => m.Address)
        
            @Html.TextBoxFor(m => m.Address, new { id = "address" })
            @Html.ValidationMessageFor(m => m.Address)
       
            @Html.LabelFor(m => m.RoomName)
       
            @Html.TextBoxFor(m => m.RoomName)
            @Html.ValidationMessageFor(m => m.RoomName)
        
            @Html.LabelFor(m => m.Email)
        
            @Html.TextBoxFor(m => m.Email)
            @Html.ValidationMessageFor(m => m.Email)
       
            @Html.LabelFor(m => m.Phone)
        
            @Html.TextBoxFor(m => m.Phone)
            @Html.ValidationMessageFor(m => m.Phone)
       
            @Html.LabelFor(m => m.Website)
        
            @Html.TextBoxFor(m => m.Website)
            @Html.ValidationMessageFor(m => m.Website)
        
    </div>
     <div class="clear">
       
            <input class="submit" type="submit" value="Valider" />
        
    </div>
    <div class="clear"></div>
    
}
</div>
@section Script
{
    <script type="text/javascript">

        function getLatLong(address) {
            var geo = new google.maps.Geocoder;
            geo.geocode({ 'address': address }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    var latlong = results[0].geometry.location
                    $("input#Latitude").val((latlong.lat()+"").replace(".", ","));
                    $("input#Longitude").val((latlong.lng()+"").replace(".", ","));
                    return results[0].geometry.location;
                }
                else {
                    alert("Geocode was not successful for the following reason: " + status);
                }
            });
        };


        $("input#address, input#city, input#code_postal, input#country").focusout(function () {
            if ($("input#address").val() != "" && $("input#city").val() != "" && $("input#code_postal").val() != "" && $("input#country").val() != "") {
                var address = $("input#address").val() + "," + $("input#city").val() + "," + $("input#code_postal").val() + "," + $("input#country").val();
                var latlong = getLatLong(address);
            }
        });

        $("#startDate, #endDate").datetimepicker({
            monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet',
                            'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
            monthNamesShort: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Jun',
                                'Jul', 'Aoû', 'Sep', 'Oct', 'Nov', 'Déc'],
            dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi',
                        'Jeudi', 'Vendredi', 'Samedi'],
            dayNamesMin: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],
            dayNamesShort: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],
            dateFormat: "dd/mm/yy",
            showOtherMonths: true,
            selectOtherMonths: true,
            showAnim: "fold",
            currentText: "Maintenant",
            closeText: "Valider",
            hourText: "Heure",
            timeText: "Horaire",
            stepMinute: 5
        });

      </script>
}