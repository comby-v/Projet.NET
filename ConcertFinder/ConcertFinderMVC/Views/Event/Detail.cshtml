@model ConcertFinderMVC.Models.EventDetail

@section Header
{
    <link href="@Url.Content("~/Content/Detail.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/_SimilarEvents.css")" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBm8CQjlFqdYRoa3Am16rtSsAiIpdhL_nw&sensor=true"></script>
}

<div class="main float-left">
    <span class="float-left">
        @Model.Item.Ville (@Model.Item.CP.Substring(0, 2))
    </span>
    <span class="float-right">
        @Model.Item.StartDate.ToShortDateString() @Model.Item.StartDate.ToShortTimeString()
    </span>
    <strong id="title_salle">
         @Model.Item.Salle
    </strong>
    <p class="clear" id="event_title">
        @Model.Item.Titre
    </p>

    <!-- Description et flyers-->
    <img class="float-left" id="flyers" src="@Url.Content("/")@Model.Item.Image" alt="flyers" />
    <strong class="type">@Model.Item.Type</strong>
    <p lang="text" class="item_descr float-left">
        @Model.Item.Description
    </p>

    <div id="visualiser" class="clear">Visualiser l'évenement sur la map</div>
    <div class="float-right" id="map">
    </div>
    <div class="clear">
        <input id="direction" type="button" value="Direction" />
    </div>

    <p>
        <strong > Salle : </strong>  @Model.Item.Salle
    </p>
    <p>
        <strong> Adresse: </strong> <em>@Model.Item.Rue  @Model.Item.Ville, @Model.Item.CP @Model.Item.Pays</em>
    </p>
    <p>
       <strong>Site Web :</strong>  <a href="@Model.Item.Website">@Model.Item.Website</a>
    </p> 
    <p>
        <strong >Email :</strong>  @Model.Item.Email
    </p>
    <p>
        <strong>Tel :</strong> @Model.Item.Tel
    </p>
    <div>
        <strong>Tags:</strong>
        @foreach (var tag in Model.Item.TagList)
        {
            <em class="tag">
                @tag
            </em>
        }
    </div>
    <div>
        @if(User.Identity.IsAuthenticated)
        {
                if (!Model.Item.Valide && (ConcertFinderMVC.BusinessManagement.Tool.IsAdmin(User.Identity.Name) ||
                    ConcertFinderMVC.BusinessManagement.Tool.IsModerator(User.Identity.Name)))
                {
                    <div>
                        @Html.ActionLink("Accepter", "ValideEvent", "Event", new { idevent = Model.Item.Id }, null)
                    </div>
                    <div>
                        @Html.ActionLink("Refuser", "DenyEvent", "Admin", new { idevent = Model.Item.Id }, null)
                    </div>
                }
                if ((User.Identity.IsAuthenticated) && (ConcertFinderMVC.BusinessManagement.Tool.CreatedByMe(User.Identity.Name, Model.Item.Id) ||
                    ConcertFinderMVC.BusinessManagement.Tool.IsAdmin(User.Identity.Name) ||
                    ConcertFinderMVC.BusinessManagement.Tool.IsModerator(User.Identity.Name)))
                {
                    <div>
                        @Html.ActionLink("Editer", "CreateEvent", "Event", new { id = Model.Item.Id }, null)
                    </div>
                }   
         }
    </div>
</div>
<div class="float-right">
        @Html.Partial("_SimilarEvents", Model.Events)
</div>

@section Script
{
    <script type="text/javascript">

        function initialize() {
            var myLatlng = new google.maps.LatLng(@Model.Item.Latitude.ToString().Replace(',', '.'), @Model.Item.Longitude.ToString().Replace(',', '.'));
            var myOptions = {
                zoom: 15,
                center: myLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            var map = new google.maps.Map(document.getElementById("map"), myOptions);

            var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                title: "@Model.Item.Salle"
            });
        }

        $("#direction").click(function (){
        
            var directionsDisplay = new google.maps.DirectionsRenderer();
            var eventLatlng = new google.maps.LatLng(@Model.Item.Latitude.ToString().Replace(',', '.'), @Model.Item.Longitude.ToString().Replace(',', '.'));
            
            var myOptions = {
                zoom: 6,
                center: eventLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var map = new google.maps.Map(document.getElementById('map'), myOptions);

            directionsDisplay.setMap(map);

            if (navigator.geolocation)
            {
                navigator.geolocation.getCurrentPosition(function(position)
                {
                    var directionsService = new google.maps.DirectionsService();
                    var pos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

                    var request = {
                        origin:pos, 
                        destination:eventLatlng,
                        travelMode: google.maps.DirectionsTravelMode.DRIVING
                    };
                    directionsService.route(request, function(response, status)
                    {
                        if (status == google.maps.DirectionsStatus.OK)
                        {
                            directionsDisplay.setDirections(response);
                        }
                    });
                }, function()
                {
                    handleNoGeolocation(true);
                });
            }
            else
            {
                // Browser doesn't support Geolocation
                handleNoGeolocation(false);
            }
        });

        initialize();

    </script>
}