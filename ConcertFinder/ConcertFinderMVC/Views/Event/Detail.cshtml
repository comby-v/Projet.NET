@model ConcertFinderMVC.Models.EventItem

@section Header
{
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBm8CQjlFqdYRoa3Am16rtSsAiIpdhL_nw&sensor=true"></script>
}

<div>
    @Model.Titre
</div>
<div>
    @Model.StartDate
</div>
<div>
    @Model.Description
</div>
<div>
    @Model.Rue, @Model.Ville, @Model.CP, @Model.Pays
</div>
<div>
    @Model.Salle
</div>

<div id="map" style="width:400px; height:400px;">
</div>

    <div>
        @if (!Model.Valide && (ConcertFinderMVC.BusinessManagement.Tool.IsAdmin(User.Identity.Name) || ConcertFinderMVC.BusinessManagement.Tool.IsModerator(User.Identity.Name)))
        {
            @Html.ActionLink("Accepter", "ValideEvent", "Event", new { idevent = Model.Id }, null)
            @Html.ActionLink("Refuser", "DenyEvent", "Admin", new { idevent = Model.Id }, null)
        }
        @if ((User.Identity.IsAuthenticated) && (ConcertFinderMVC.BusinessManagement.Tool.CreatedByMe(User.Identity.Name, Model.Id) || ConcertFinderMVC.BusinessManagement.Tool.IsAdmin(User.Identity.Name) || ConcertFinderMVC.BusinessManagement.Tool.IsModerator(User.Identity.Name)))
        {
            @Html.ActionLink("Editer", "CreateEvent", "Event", new { id = Model.Id }, null)
        }
    </div>
    <div>
        <input id="direction" type="button" value="Direction" />
    </div>

@section Script
{
    <script type="text/javascript">

        function initialize() {
            var myLatlng = new google.maps.LatLng(@Model.Longitude.ToString().Replace(',', '.'), @Model.Latitude.ToString().Replace(',', '.'));
            var myOptions = {
                zoom: 15,
                center: myLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            var map = new google.maps.Map(document.getElementById("map"), myOptions);

            var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                title: "@Model.Salle"
            });
        }

        $("#direction").click(function (){
        
            var directionsDisplay = new google.maps.DirectionsRenderer();
            var eventLatlng = new google.maps.LatLng(@Model.Longitude.ToString().Replace(',', '.'), @Model.Latitude.ToString().Replace(',', '.'));
            
            var myOptions = {
                zoom: 6,
                center: eventLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var map = new google.maps.Map(document.getElementById('map'), myOptions);

            directionsDisplay.setMap(map);

            if (navigator.geolocation)
            {
                navigator.geolocation.getCurrentPosition(function(position)
                {
                    var directionsService = new google.maps.DirectionsService();
                    var pos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

                    var request = {
                        origin:pos, 
                        destination:eventLatlng,
                        travelMode: google.maps.DirectionsTravelMode.DRIVING
                    };
                    directionsService.route(request, function(response, status)
                    {
                        if (status == google.maps.DirectionsStatus.OK)
                        {
                            directionsDisplay.setDirections(response);
                        }
                    });
                }, function()
                {
                    handleNoGeolocation(true);
                });
            }
            else
            {
                // Browser doesn't support Geolocation
                handleNoGeolocation(false);
            }
        });

        initialize();

    </script>
}